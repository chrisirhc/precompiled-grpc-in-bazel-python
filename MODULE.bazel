bazel_dep(name = "rules_proto", version = "7.0.1")
bazel_dep(name = "rules_proto_grpc", version = "5.0.1")
bazel_dep(name = "rules_proto_grpc_python", version = "5.0.1")

bazel_dep(name = "rules_proto_grpc_example_protos", version = "0.0.0.rpg.version.placeholder")
local_path_override(
    module_name = "rules_proto_grpc_example_protos",
    path = "modules/example_protos",
)

# Upgrade this to for toolchains_protoc to support rules_proto@7 https://github.com/aspect-build/toolchains_protoc/pull/30
# Due to https://github.com/bazelbuild/rules_python/commit/155efce562f14d46530fb5bec698a11e2ee889f5
single_version_override(
    module_name = "toolchains_protoc",
    version = "0.3.4",
)

bazel_dep(name = "grpc", version = "1.65.0")
# https://github.com/rules-proto-grpc/rules_proto_grpc/issues/341#issuecomment-2265154147
single_version_override(
    module_name = "grpc-java",
    version = "1.64.0",
)

bazel_dep(name = "rules_python", version = "0.40.0")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(python_version = "3.11")

bazel_dep(name = "rules_uv", version = "0.41.0")

dev_pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
dev_pip.parse(
    hub_name = "pypi",
    python_version = "3.11",
    requirements_lock = "//tools:requirements.txt",
)
use_repo(dev_pip, "pypi")

register_toolchains(
    # Note additional _toolchain suffix here or just use `:all` to avoid this mistake.
    "//thirdparty/rules_proto_grpc:prebuilt_protoc_toolchain_with_grpc_plugin_toolchain",
)